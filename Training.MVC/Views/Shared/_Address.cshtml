@using Training.MVC.Models
@model Training.MVC.Models.Address



<div class="panel">
    <div class="form-group">
        <label class="col-sm-3 control-label">Address Line 1</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => Model.AddressLine1, new { @class = "form-control input-sm" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Address Line 2</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => Model.AddressLine2, new { @class = "form-control input-sm" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Address Line 3</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => Model.AddressLine3, new { @class = "form-control input-sm .customSize" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Town</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => Model.Town, new { @class = "form-control input-sm"})
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-3 control-label">Country</label>
        <div class="col-sm-9">
            @Html.DropDownListFor(m=>m.CountryId, new Training.MVC.Models.Address().Countries, new { @class = "form-control  form-white" })
        </div>
    </div>
</div>

<style>
    .customSize{
        width:300px;
    }
    </style>